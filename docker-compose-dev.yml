version: '3.8'

services:
  frontend:
    image: frontend:latest
    build:
      context: frontend
      dockerfile: ./Dockerfile-dev
    working_dir: /app
    restart: unless-stopped
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - hyvatech-network
  backend:
    image: backend:latest
    build:
      context: backend
      dockerfile: ./Dockerfile-dev
    working_dir: /app
    restart: unless-stopped

    expose:
      - "5000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - DB_PORT=${DB_PORT}
      - PORT=${PORT}
    volumes:
      - ./backend:/app
    depends_on:
      - database
    networks: 
      - hyvatech-network

  database:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5431:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks: 
      - hyvatech-network
  nginx:
    image: docker.arvancloud.ir/nginx:1.27
    container_name: hyvatech-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf/app.conf:/etc/nginx/conf.d/default.conf
    networks:
      - hyvatech-network
networks:
  hyvatech-network:
    external: true
