version: '3.8'

services:
  frontend:
    image: frontend:prod
    build:
      context: frontend
      dockerfile: ./Dockerfile-prod
    container_name: hyvatech-frontend
    restart: always
    working_dir: /app
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - backend
    networks:
      - hyvatech-network
  backend:
    image: backend:prod
    build:
      context: backend
      dockerfile: ./Dockerfile-prod
    container_name: hyvatech-backend
    restart: always
    working_dir: /app
    expose:
      - "5000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - DB_PORT=${DB_PORT}
      - PORT=${PORT}
    
    depends_on:
      - database
    networks: 
      - hyvatech-network

  database:
    image: postgres:17-alpine3.20
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5431:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks: 
      - hyvatech-network
networks:
  hyvatech-network:
    external: true 
